# Parameter definitions for thorn MagScalarEvolve

shares: ScalarBase
USES CCTK_REAL V_lambda
USES CCTK_REAL mu
USES CCTK_REAL phi1_0
USES CCTK_REAL phi2_0
USES CCTK_INT  n_phi1
USES CCTK_INT  n_phi2
USES CCTK_REAL Kphi1_0
USES CCTK_REAL Kphi2_0
USES CCTK_INT  n_Kphi1
USES CCTK_INT  n_Kphi2

shares: ProcaBase
USES CCTK_REAL mu as mu_V
USES CCTK_REAL E0
USES CCTK_REAL A0
USES CCTK_REAL Aphi0
USES CCTK_INT  n_E
USES CCTK_INT  n_A
USES CCTK_INT  n_Aphi
USES CCTK_INT  n_Zeta

shares: MagScalarBase
USES CCTK_REAL q

EXTENDS KEYWORD evolution_method ""
{
  "MagScalarEvolve" :: "Use MagScalarEvolve to evolve MagScalar variables"
}


shares: MethodOfLines
USES CCTK_INT MoL_Num_Evolved_Vars
USES CCTK_INT MoL_Num_Constrained_Vars
USES CCTK_INT MoL_Num_SaveAndRestore_Vars


restricted:

CCTK_INT MagScalarEvolve_MaxNumEvolvedVars "The maximum number of evolved variables used by MagScalarEvolve" ACCUMULATOR-BASE=MethodofLines::MoL_Num_Evolved_Vars
{
  12:12           :: "Just 12: E^i, A_i, Aphi, Zeta, phi, Kphi"
} 12

CCTK_INT MagScalarEvolve_MaxNumConstrainedVars "The maximum number of constrained variables used by MagScalarEvolve" ACCUMULATOR-BASE=MethodofLines::MoL_Num_Constrained_Vars
{
  0:0           :: "none"
} 0

CCTK_INT MagScalarEvolve_MaxNumSandRVars "The maximum number of save and restore variables used by MagScalarEvolve" ACCUMULATOR-BASE=MethodofLines::MoL_Num_SaveAndRestore_Vars
{
  16:16           :: "lapse, shift, metric, and extrinsic curvature"
} 16


private:

CCTK_INT derivs_order "Order for derivatives"
{
  4 :: "4th order stencils"
  6 :: "6th order stencils"
} 4

BOOLEAN use_advection_stencils "Use lop-sided stencils for advection derivs"
{
} "yes"

CCTK_REAL kappa "Damping parameter for Maxwell equations"
{
  0:*  :: "non-negative"
} 1

CCTK_REAL Zeta_Omega_fac "Set to zero to not evolve Zeta and Omega"
{
  *:*  :: "zero or one"
} 1

CCTK_REAL chi_floor "Minimal value of abs(chi)"
{
  *:*  :: "Any value possible"
} 1.0d-05

REAL conf_fac_exponent "Exponent n for hgamma_ij = chi^n gamma_ij conformal decomposition"
{
  (*:*) :: "1 or 2 are good choices"
} 1


BOOLEAN calculate_constraints "Calculate the EMG constraints?" STEERABLE=always
{
} "no"
